{"ast":null,"code":"var _SucheKundenComponent_instances, _SucheKundenComponent_setProps, _SucheKundenComponent_handleFindError;\nimport { __classPrivateFieldGet } from \"tslib\";\nimport { FindError } from '../shared';\nimport { first, tap } from 'rxjs';\nimport log from 'loglevel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared\";\nimport * as i2 from \"@angular/platform-browser\";\nfunction SucheKundenComponent_hs_waiting_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"hs-waiting\");\n  }\n}\nfunction SucheKundenComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"hs-suchergebnis\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"kunden\", ctx_r2.kunden)(\"errorMsg\", ctx_r2.errorMsg);\n  }\n}\nexport class SucheKundenComponent {\n  // Wird von der JS-Engine aufgerufen\n  constructor(kundeService, titleService) {\n    this.kundeService = kundeService;\n    this.titleService = titleService;\n    _SucheKundenComponent_instances.add(this);\n    this.waiting = false;\n    this.kunden = [];\n    log.debug('SucheKundenComponent.constructor()');\n  }\n  // Wird von Angular aufgerufen, wenn der DOM-Baum fertig ist,\n  // d.h. nach dem \"Rendering\".\n  // Wird immer generiert, wenn Angular-CLI genutzt wird.\n  ngOnInit() {\n    this.titleService.setTitle('Suche');\n  }\n  /**\r\n   * Das Attribut <code>suchkriterien</code> wird auf den Wert des Ereignisses\r\n   * <code>$suchkriterien</code> vom Typ Suchkriterien gesetzt. Diese Methode\r\n   * wird aufgerufen, wenn in der Kindkomponente f&uuml;r\r\n   * <code>hs-suchformular</code> das Ereignis ausgel&ouml;st wird.\r\n   *\r\n   * @param suchkriterien f&uuml;r die Suche.\r\n   */\n  suchen(suchkriterien) {\n    log.debug('SucheKundenComponent.suchen(): suchkriterien=', suchkriterien);\n    this.kunden = [];\n    this.errorMsg = undefined;\n    this.waiting = true;\n    // Observable: mehrere Werte werden \"lazy\" bereitgestellt, statt in einem JSON-Array\n    // pipe ist eine \"pure\" Funktion, die ein Observable in ein NEUES Observable transformiert\n    this.kundeService.find(suchkriterien) // eslint-disable-line unicorn/no-array-callback-reference\n    .pipe(first(), tap(result => __classPrivateFieldGet(this, _SucheKundenComponent_instances, \"m\", _SucheKundenComponent_setProps).call(this, result))).subscribe();\n  }\n}\n_SucheKundenComponent_instances = new WeakSet(), _SucheKundenComponent_setProps = function _SucheKundenComponent_setProps(result) {\n  this.waiting = false;\n  if (result instanceof FindError) {\n    __classPrivateFieldGet(this, _SucheKundenComponent_instances, \"m\", _SucheKundenComponent_handleFindError).call(this, result);\n    return;\n  }\n  this.kunden = result;\n  log.debug('SucheKundenComponent.setProps(): kunden=', this.kunden);\n}, _SucheKundenComponent_handleFindError = function _SucheKundenComponent_handleFindError(err) {\n  const {\n    statuscode\n  } = err;\n  log.debug(`SucheKundenComponent.#handleError(): statuscode=${statuscode}`);\n  switch (statuscode) {\n    case 404 /* HttpStatusCode.NotFound */:\n      this.errorMsg = 'Keine Kunden gefunden.';\n      break;\n    case 429 /* HttpStatusCode.TooManyRequests */:\n      this.errorMsg = 'Zu viele Anfragen. Bitte versuchen Sie es später noch einmal.';\n      break;\n    case 504 /* HttpStatusCode.GatewayTimeout */:\n      this.errorMsg = 'Ein interner Fehler ist aufgetreten.';\n      log.error('Laeuft der Appserver? Port-Forwarding?');\n      break;\n    default:\n      this.errorMsg = 'Ein unbekannter Fehler ist aufgetreten.';\n      break;\n  }\n  log.debug('SucheKundenComponent.#setErrorMsg: errorMsg=', this.errorMsg);\n};\nSucheKundenComponent.ɵfac = function SucheKundenComponent_Factory(t) {\n  return new (t || SucheKundenComponent)(i0.ɵɵdirectiveInject(i1.KundeReadService), i0.ɵɵdirectiveInject(i2.Title));\n};\nSucheKundenComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SucheKundenComponent,\n  selectors: [[\"hs-suche-kunde\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[3, \"suchkriterien$\"], [\"aria-label\", \"Suchergebnis\", 1, \"mt-2\"], [4, \"ngIf\", \"ngIfElse\"], [\"showSuchergebnis\", \"\"], [3, \"kunden\", \"errorMsg\"]],\n  template: function SucheKundenComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"hs-suchformular\", 0);\n      i0.ɵɵlistener(\"suchkriterien$\", function SucheKundenComponent_Template_hs_suchformular_suchkriterien__0_listener($event) {\n        return ctx.suchen($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"section\", 1);\n      i0.ɵɵtemplate(2, SucheKundenComponent_hs_waiting_2_Template, 1, 0, \"hs-waiting\", 2);\n      i0.ɵɵtemplate(3, SucheKundenComponent_ng_template_3_Template, 1, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(4);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.waiting)(\"ngIfElse\", _r1);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;AAKA,SAASA,SAAS,QAAgD,WAAW;AAC7E,SAASC,KAAK,EAAEC,GAAG,QAAQ,MAAM;AAGjC,OAAOC,GAAG,MAAM,UAAU;;;;;;ICNxBC,6BAAgE;;;;;IAG9DA,qCAA4E;;;;IAA3DA,sCAAiB;;;ADStC,OAAM,MAAOC,oBAAoB;EAO7B;EACAC,YACqBC,YAA8B,EAC9BC,YAAmB;IADnB,iBAAY,GAAZD,YAAY;IACZ,iBAAY,GAAZC,YAAY;;IATjC,YAAO,GAAG,KAAK;IAEf,WAAM,GAAY,EAAE;IAShBL,GAAG,CAACM,KAAK,CAAC,oCAAoC,CAAC;EACnD;EAEA;EACA;EACA;EACAC,QAAQ;IACJ,IAAI,CAACF,YAAY,CAACG,QAAQ,CAAC,OAAO,CAAC;EACvC;EAEA;;;;;;;;EAQAC,MAAM,CAACC,aAA4B;IAC/BV,GAAG,CAACM,KAAK,CACL,+CAA+C,EAC/CI,aAAa,CAChB;IAED,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,QAAQ,GAAGC,SAAS;IAEzB,IAAI,CAACC,OAAO,GAAG,IAAI;IAEnB;IACA;IACA,IAAI,CAACV,YAAY,CACZW,IAAI,CAACL,aAAa,CAAC,CAAC;IAAA,CACpBM,IAAI,CACDlB,KAAK,EAAE,EACPC,GAAG,CAACkB,MAAM,IAAIC,2BAAI,uEAAU,MAAd,IAAI,EAAWD,MAAM,CAAC,CAAC,CACxC,CACAE,SAAS,EAAE;EACpB;;0HAEUF,MAA2B;EACjC,IAAI,CAACH,OAAO,GAAG,KAAK;EAEpB,IAAIG,MAAM,YAAYpB,SAAS,EAAE;IAC7BqB,2BAAI,8EAAiB,MAArB,IAAI,EAAkBD,MAAM,CAAC;IAC7B;;EAGJ,IAAI,CAACN,MAAM,GAAGM,MAAM;EACpBjB,GAAG,CAACM,KAAK,CAAC,0CAA0C,EAAE,IAAI,CAACK,MAAM,CAAC;AACtE,CAAC,yFAEgBS,GAAc;EAC3B,MAAM;IAAEC;EAAU,CAAE,GAAGD,GAAG;EAC1BpB,GAAG,CAACM,KAAK,CACL,mDAAmDe,UAAU,EAAE,CAClE;EAED,QAAQA,UAAU;IACd;MACI,IAAI,CAACT,QAAQ,GAAG,wBAAwB;MACxC;IACJ;MACI,IAAI,CAACA,QAAQ,GACT,+DAA+D;MACnE;IACJ;MACI,IAAI,CAACA,QAAQ,GAAG,sCAAsC;MACtDZ,GAAG,CAACsB,KAAK,CAAC,wCAAwC,CAAC;MACnD;IACJ;MACI,IAAI,CAACV,QAAQ,GAAG,yCAAyC;MACzD;EAAM;EAGdZ,GAAG,CAACM,KAAK,CACL,8CAA8C,EAC9C,IAAI,CAACM,QAAQ,CAChB;AACL,CAAC;;mBA3FQV,oBAAoB;AAAA;;QAApBA,oBAAoB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCfjC1B,0CAAmD;MAAlCA;QAAA,OAAkB2B,kBAAc;MAAA,EAAC;MAAC3B,iBAAkB;MAErEA,kCAAgD;MAC9CA,mFAAgE;MAEhEA,sHAEc;MAChBA,iBAAU;;;;MALKA,eAAe;MAAfA,kCAAe","names":["FindError","first","tap","log","i0","SucheKundenComponent","constructor","kundeService","titleService","debug","ngOnInit","setTitle","suchen","suchkriterien","kunden","errorMsg","undefined","waiting","find","pipe","result","__classPrivateFieldGet","subscribe","err","statuscode","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Dominik\\software-engineering\\kundeweb\\src\\app\\kunde\\suche-kunde\\suche-kunde.component.ts","C:\\Users\\Dominik\\software-engineering\\kundeweb\\src\\app\\kunde\\suche-kunde\\suche-kunde.component.html"],"sourcesContent":["// eslint-disable-next-line eslint-comments/disable-enable-pair\n/* eslint-disable import/no-unresolved */\n// eslint-disable-next-line eslint-comments/disable-enable-pair\n/* eslint-disable @typescript-eslint/consistent-type-imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FindError, Kunde, KundeReadService, Suchkriterien } from '../shared';\nimport { first, tap } from 'rxjs';\nimport { HttpStatusCode } from '@angular/common/http';\nimport { Title } from '@angular/platform-browser';\nimport log from 'loglevel';\n\n@Component({\n    selector: 'hs-suche-kunde',\n    templateUrl: './suche-kunde.component.html',\n})\nexport class SucheKundenComponent implements OnInit {\n    waiting = false;\n\n    kunden: Kunde[] = [];\n\n    errorMsg: string | undefined;\n\n    // Wird von der JS-Engine aufgerufen\n    constructor(\n        private readonly kundeService: KundeReadService,\n        private readonly titleService: Title,\n    ) {\n        log.debug('SucheKundenComponent.constructor()');\n    }\n\n    // Wird von Angular aufgerufen, wenn der DOM-Baum fertig ist,\n    // d.h. nach dem \"Rendering\".\n    // Wird immer generiert, wenn Angular-CLI genutzt wird.\n    ngOnInit() {\n        this.titleService.setTitle('Suche');\n    }\n\n    /**\n     * Das Attribut <code>suchkriterien</code> wird auf den Wert des Ereignisses\n     * <code>$suchkriterien</code> vom Typ Suchkriterien gesetzt. Diese Methode\n     * wird aufgerufen, wenn in der Kindkomponente f&uuml;r\n     * <code>hs-suchformular</code> das Ereignis ausgel&ouml;st wird.\n     *\n     * @param suchkriterien f&uuml;r die Suche.\n     */\n    suchen(suchkriterien: Suchkriterien) {\n        log.debug(\n            'SucheKundenComponent.suchen(): suchkriterien=',\n            suchkriterien,\n        );\n\n        this.kunden = [];\n        this.errorMsg = undefined;\n\n        this.waiting = true;\n\n        // Observable: mehrere Werte werden \"lazy\" bereitgestellt, statt in einem JSON-Array\n        // pipe ist eine \"pure\" Funktion, die ein Observable in ein NEUES Observable transformiert\n        this.kundeService\n            .find(suchkriterien) // eslint-disable-line unicorn/no-array-callback-reference\n            .pipe(\n                first(),\n                tap(result => this.#setProps(result)),\n            )\n            .subscribe();\n    }\n\n    #setProps(result: FindError | Kunde[]) {\n        this.waiting = false;\n\n        if (result instanceof FindError) {\n            this.#handleFindError(result);\n            return;\n        }\n\n        this.kunden = result;\n        log.debug('SucheKundenComponent.setProps(): kunden=', this.kunden);\n    }\n\n    #handleFindError(err: FindError) {\n        const { statuscode } = err;\n        log.debug(\n            `SucheKundenComponent.#handleError(): statuscode=${statuscode}`,\n        );\n\n        switch (statuscode) {\n            case HttpStatusCode.NotFound:\n                this.errorMsg = 'Keine Kunden gefunden.';\n                break;\n            case HttpStatusCode.TooManyRequests:\n                this.errorMsg =\n                    'Zu viele Anfragen. Bitte versuchen Sie es später noch einmal.';\n                break;\n            case HttpStatusCode.GatewayTimeout:\n                this.errorMsg = 'Ein interner Fehler ist aufgetreten.';\n                log.error('Laeuft der Appserver? Port-Forwarding?');\n                break;\n            default:\n                this.errorMsg = 'Ein unbekannter Fehler ist aufgetreten.';\n                break;\n        }\n\n        log.debug(\n            'SucheKundenComponent.#setErrorMsg: errorMsg=',\n            this.errorMsg,\n        );\n    }\n}\n","<hs-suchformular (suchkriterien$)=\"suchen($event)\"></hs-suchformular>\n\n<section class=\"mt-2\" aria-label=\"Suchergebnis\">\n  <hs-waiting *ngIf=\"waiting; else showSuchergebnis\"></hs-waiting>\n\n  <ng-template #showSuchergebnis>\n    <hs-suchergebnis [kunden]=\"kunden\" [errorMsg]=\"errorMsg\"> </hs-suchergebnis>\n  </ng-template>\n</section>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}