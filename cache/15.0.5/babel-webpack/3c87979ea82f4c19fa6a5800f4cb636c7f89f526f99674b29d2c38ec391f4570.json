{"ast":null,"code":"import { Temporal } from '@js-temporal/polyfill';\nimport log from 'loglevel';\n/**\r\n * Ein Kunde-Objekt mit JSON-Daten erzeugen, die von einem RESTful Web\r\n * Service kommen.\r\n * @param kunde JSON-Objekt mit Daten vom RESTful Web Server\r\n * @return Das initialisierte Kunde-Objekt\r\n */\n// eslint-disable-next-line max-lines-per-function\nexport const toKunde = (kundeServer, etag) => {\n  let selfLink;\n  const {\n    _links\n  } = kundeServer; // eslint-disable-line @typescript-eslint/naming-convention\n  if (_links !== undefined) {\n    const {\n      self\n    } = _links;\n    selfLink = self.href;\n  }\n  let id;\n  if (selfLink !== undefined) {\n    const lastSlash = selfLink.lastIndexOf('/');\n    id = selfLink.slice(lastSlash + 1);\n  }\n  let version;\n  if (etag !== undefined) {\n    // Anfuehrungszeichen am Anfang und am Ende entfernen\n    const versionStr = etag.slice(1, -1);\n    version = Number.parseInt(versionStr, 10);\n  }\n  const {\n    nachname,\n    email,\n    kategorie,\n    hasNewsletter,\n    geschlecht,\n    geburtsdatum,\n    adresse,\n    homepage,\n    familienstand,\n    umsatz,\n    interessen\n  } = kundeServer;\n  let datumTemporal;\n  // TODO Parsing, ob der Datum-String valide ist\n  if (geburtsdatum !== undefined) {\n    const [yearStr, monthStr, dayStr] = geburtsdatum.replace(/T.*/gu, '').split('-');\n    const year = Number(yearStr);\n    const month = Number(monthStr);\n    const day = Number(dayStr);\n    datumTemporal = new Temporal.PlainDate(year, month, day);\n  }\n  const kunde = {\n    id,\n    nachname,\n    email,\n    kategorie,\n    hasNewsletter,\n    geschlecht,\n    geburtsdatum: datumTemporal,\n    adresse,\n    homepage,\n    familienstand,\n    umsatz,\n    interessen,\n    version\n  };\n  log.debug('Kunde.fromServer: kunde=', kunde);\n  return kunde;\n};\n/**\r\n * Konvertierung des Kundeobjektes in ein JSON-Objekt f&uuml;r den RESTful\r\n * Web Service.\r\n * @return Das JSON-Objekt f&uuml;r den RESTful Web Service\r\n */\nexport const toKundeServer = kunde => {\n  const geburtsdatum = kunde.geburtsdatum === undefined ? Temporal.Now.plainDateTimeISO().toString() : kunde.geburtsdatum.toString();\n  return {\n    nachname: kunde.nachname,\n    email: kunde.email,\n    kategorie: kunde.kategorie,\n    hasNewsletter: kunde.hasNewsletter,\n    geschlecht: kunde.geschlecht,\n    geburtsdatum,\n    adresse: kunde.adresse,\n    homepage: kunde.homepage,\n    familienstand: kunde.familienstand,\n    umsatz: kunde.umsatz,\n    interessen: kunde.interessen\n  };\n};","map":{"version":3,"mappings":"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","names":["Temporal","log","toKunde","kundeServer","etag","selfLink","_links","undefined","self","href","id","lastSlash","lastIndexOf","slice","version","versionStr","Number","parseInt","nachname","email","kategorie","hasNewsletter","geschlecht","geburtsdatum","adresse","homepage","familienstand","umsatz","interessen","datumTemporal","yearStr","monthStr","dayStr","replace","split","year","month","day","PlainDate","kunde","debug","toKundeServer","Now","plainDateTimeISO","toString"],"sourceRoot":"","sources":["C:\\Users\\Dominik\\software-engineering\\kundeweb\\src\\app\\kunde\\shared\\kundeServer.ts"],"sourcesContent":["import type {\n    FamilienstandType,\n    GeschlechtType,\n    Kunde,\n    KundeShared,\n    Umsatz\n} from './kunde';\nimport { Temporal } from '@js-temporal/polyfill';\nimport log from 'loglevel';\n\ninterface Link {\n    href: string;\n}\n\n/**\n * Daten vom und zum REST-Server:\n * <ul>\n *  <li> Arrays f&uuml;r mehrere Werte, die in einem Formular als Checkbox\n *       dargestellt werden.\n *  <li> Daten mit Zahlen als Datentyp, die in einem Formular nur als\n *       String handhabbar sind.\n * </ul>\n */\nexport interface KundeServer extends KundeShared {\n    geburtsdatum?: string;\n    geschlecht?: GeschlechtType;\n    interessen?: string[];\n    homepage?: string;\n    umsatz?: Umsatz;\n    familienstand?: FamilienstandType;\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    _links?: {\n        self: Link;\n        list?: Link;\n        add?: Link;\n        update?: Link;\n        remove?: Link;\n    };\n}\n\n/**\n * Ein Kunde-Objekt mit JSON-Daten erzeugen, die von einem RESTful Web\n * Service kommen.\n * @param kunde JSON-Objekt mit Daten vom RESTful Web Server\n * @return Das initialisierte Kunde-Objekt\n */\n// eslint-disable-next-line max-lines-per-function\nexport const toKunde = (kundeServer: KundeServer, etag?: string) => {\n    let selfLink: string | undefined;\n    const { _links } = kundeServer; // eslint-disable-line @typescript-eslint/naming-convention\n    if (_links !== undefined) {\n        const { self } = _links;\n        selfLink = self.href;\n    }\n\n    let id: string | undefined;\n    if (selfLink !== undefined) {\n        const lastSlash = selfLink.lastIndexOf('/');\n        id = selfLink.slice(lastSlash + 1);\n    }\n\n    let version: number | undefined;\n    if (etag !== undefined) {\n        // Anfuehrungszeichen am Anfang und am Ende entfernen\n        const versionStr = etag.slice(1, -1);\n        version = Number.parseInt(versionStr, 10);\n    }\n\n    const {\n        nachname,\n        email,\n        kategorie,\n        hasNewsletter,\n        geschlecht,\n        geburtsdatum,\n        adresse,\n        homepage,\n        familienstand,\n        umsatz,\n        interessen,\n    } = kundeServer;\n\n    let datumTemporal: Temporal.PlainDate | undefined;\n    // TODO Parsing, ob der Datum-String valide ist\n    if (geburtsdatum !== undefined) {\n        const [yearStr, monthStr, dayStr] = geburtsdatum\n            .replace(/T.*/gu, '')\n            .split('-');\n        const year = Number(yearStr);\n        const month = Number(monthStr);\n        const day = Number(dayStr);\n        datumTemporal = new Temporal.PlainDate(year, month, day);\n    }\n\n    const kunde: Kunde = {\n        id,\n        nachname,\n        email,\n        kategorie,\n        hasNewsletter,\n        geschlecht,\n        geburtsdatum: datumTemporal,\n        adresse,\n        homepage,\n        familienstand,\n        umsatz,\n        interessen,\n        version,\n    };\n    log.debug('Kunde.fromServer: kunde=', kunde);\n    return kunde;\n};\n\n/**\n * Konvertierung des Kundeobjektes in ein JSON-Objekt f&uuml;r den RESTful\n * Web Service.\n * @return Das JSON-Objekt f&uuml;r den RESTful Web Service\n */\nexport const toKundeServer = (kunde: Kunde): KundeServer => {\n    const geburtsdatum =\n        kunde.geburtsdatum === undefined\n            ? Temporal.Now.plainDateTimeISO().toString()\n            : kunde.geburtsdatum.toString();\n    return {\n        nachname: kunde.nachname,\n        email: kunde.email,\n        kategorie: kunde.kategorie,\n        hasNewsletter: kunde.hasNewsletter,\n        geschlecht: kunde.geschlecht,\n        geburtsdatum,\n        adresse: kunde.adresse,\n        homepage: kunde.homepage,\n        familienstand: kunde.familienstand,\n        umsatz: kunde.umsatz,\n        interessen: kunde.interessen,\n    };\n};"]},"metadata":{},"sourceType":"module","externalDependencies":[]}