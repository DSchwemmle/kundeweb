{"ast":null,"code":"// statt console.log(...)\nimport log from 'loglevel';\nimport * as i0 from \"@angular/core\";\n// JIT (= Just-in-time) Compiler: Uebersetzung zur Laufzeit, d.h. dynamisch\n// AoT (= Ahead-of-Time) Compiler: statische Übersetzung fuehrt zu weniger Code bzw. kleinerem Bundle\n// Web-Komponente (\"web component\"): Zusammenfassung von\n//  * HTML-Fragment\n//  * Shadow DOM fuer das HTML-Fragment\n//  * CSS-Stil fuer das HTML-Fragment\n//  * Logik durch JavaScript\n// https://developer.mozilla.org/docs/Web/Web_Components\n// https://developer.mozilla.org/docs/Web/Web_Components/Shadow_DOM\n// \"Composite Pattern\" bei UIs: Eine UI-Komponente besteht aus wiederum aus\n// einfachen UI-Komponenten, z.B. ein Suchformular besteht aus einem Label,\n// einem Eingabefeld und einem Button.\n// Eine Komponente (= funktionale Einheit) ist an das MVC-Pattern angelehnt:\n// sie besteht aus einem HTML-Template (= View) und der zugehoerigen\n// Dialogsteuerung (= Controller) mit dem Model als Bindeglied.\n// Controller sind klein (\"Thin Controllers\") und die Anwendungslogik wird\n// in die Service-Klassen ausgelagert.\n// Innerhalb der Wurzelkomponente werden die Kindkomponenten geladen.\n// https://angular.io/docs/js/latest/api/annotations/ComponentAnnotation-class.html\n// Metadaten-Annotationen in Angular sind z.B. @Component.\n// Annotationen sind ein Spezialfall der Decorators:\n// Ein Decorator *ergaenzt* die vorhandene Funktionalitaet von einer Klasse oder\n// einer Methode oder einem Attribut oder einem Methodenargument.\n// siehe https://github.com/wycats/javascript-decorators\n/**\r\n * Wurzelkomponente mit dem Tag &lt;hs-root&gt;\r\n */\n// Definitionsklasse ~ Controller: Eingabedaten entgegennehmen, Model fuer die\n// View aktualisieren, Funktionen fuer die Benutzer-Interaktion bereitstellen,\n// z.B. onClick oder onSubmit\nexport class AppComponent {\n  constructor() {\n    log.debug('AppComponent.constructor()');\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"hs-root\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 3,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"hs-header\")(1, \"hs-main\")(2, \"hs-footer\");\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAsBA;AACA,OAAOA,GAAG,MAAM,UAAU;;AAE1B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AAsCA;AACA;AACA;AACA,OAAM,MAAOC,YAAY;EACrBC;IACIF,GAAG,CAACG,KAAK,CAAC,4BAA4B,CAAC;EAC3C;;;mBAHSF,YAAY;AAAA;;QAAZA,YAAY;EAAAG;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC7EzBC,4BAAuB","names":["log","AppComponent","constructor","debug","selectors","standalone","features","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Dominik\\software-engineering\\kundeweb\\src\\app\\app.component.ts","C:\\Users\\Dominik\\software-engineering\\kundeweb\\src\\app\\app.component.html"],"sourcesContent":["/*\n * Copyright (C) 2018 - present Juergen Zimmermann, Hochschule Karlsruhe\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n// \"core\" enthaelt Funktionalitaet, damit die Webanwendung im Browser laeuft\nimport { Component } from '@angular/core';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { MainComponent } from './layout/main/main.component';\n// statt console.log(...)\nimport log from 'loglevel';\n\n// JIT (= Just-in-time) Compiler: Uebersetzung zur Laufzeit, d.h. dynamisch\n// AoT (= Ahead-of-Time) Compiler: statische Übersetzung fuehrt zu weniger Code bzw. kleinerem Bundle\n\n// Web-Komponente (\"web component\"): Zusammenfassung von\n//  * HTML-Fragment\n//  * Shadow DOM fuer das HTML-Fragment\n//  * CSS-Stil fuer das HTML-Fragment\n//  * Logik durch JavaScript\n// https://developer.mozilla.org/docs/Web/Web_Components\n// https://developer.mozilla.org/docs/Web/Web_Components/Shadow_DOM\n\n// \"Composite Pattern\" bei UIs: Eine UI-Komponente besteht aus wiederum aus\n// einfachen UI-Komponenten, z.B. ein Suchformular besteht aus einem Label,\n// einem Eingabefeld und einem Button.\n\n// Eine Komponente (= funktionale Einheit) ist an das MVC-Pattern angelehnt:\n// sie besteht aus einem HTML-Template (= View) und der zugehoerigen\n// Dialogsteuerung (= Controller) mit dem Model als Bindeglied.\n// Controller sind klein (\"Thin Controllers\") und die Anwendungslogik wird\n// in die Service-Klassen ausgelagert.\n// Innerhalb der Wurzelkomponente werden die Kindkomponenten geladen.\n// https://angular.io/docs/js/latest/api/annotations/ComponentAnnotation-class.html\n\n// Metadaten-Annotationen in Angular sind z.B. @Component.\n// Annotationen sind ein Spezialfall der Decorators:\n// Ein Decorator *ergaenzt* die vorhandene Funktionalitaet von einer Klasse oder\n// einer Methode oder einem Attribut oder einem Methodenargument.\n// siehe https://github.com/wycats/javascript-decorators\n\n/**\n * Wurzelkomponente mit dem Tag &lt;hs-root&gt;\n */\n@Component({\n    // Schnittstelle der View fuer Wiederverwendung in anderen Komponenten:\n    // durch den CSS-Selector hs-root in index.html:\n    // Beispiel:\n    //   <hs-root>\n    //       <hs-header>\n    //           ...\n    //       </hs-header>\n    //       <hs-main>\n    //           <router-outlet>\n    //               <hs-suche-buecher>\n    //                   <hs-suchformular>\n    //                       ...\n    //                   </hs-suchformular>\n    //                   <hs-suchergebnis>\n    //                       ...\n    //                   </hs-suchergebnis>\n    //               </hs-suche-buecher>\n    //           <router-outlet>\n    //       </hs-main>\n    //   </hs-root>\n    selector: 'hs-root',\n\n    // \"template - A document or file having a preset format, used as a\n    // starting point for a particular application so that the format does not\n    // have to be recreated each time it is used.\"\n    // Siehe http://www.thefreedictionary.com/template\n    // HTML-Templates ~ View bei MVC: das Model referenzieren u. den Controller\n    // aufrufen.\n    templateUrl: './app.component.html',\n\n    imports: [FooterComponent, HeaderComponent, MainComponent],\n    standalone: true,\n})\n\n// Definitionsklasse ~ Controller: Eingabedaten entgegennehmen, Model fuer die\n// View aktualisieren, Funktionen fuer die Benutzer-Interaktion bereitstellen,\n// z.B. onClick oder onSubmit\nexport class AppComponent {\n    constructor() {\n        log.debug('AppComponent.constructor()');\n    }\n}\n","<!--\n   Copyright (C) 2015 - present Juergen Zimmermann, Hochschule Karlsruhe\n\n   This program is free software: you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-->\n\n<!-- Eigene Komponente fuer die Navigationsleiste -->\n<hs-header></hs-header>\n\n<!-- Eigene Komponente fuer den Haupteil: austauschbar durch Routing -->\n<hs-main></hs-main>\n\n<!-- Eigene Komponente fuer die Fussleiste -->\n<hs-footer></hs-footer>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}